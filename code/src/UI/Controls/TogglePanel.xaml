<UserControl x:Class="Microsoft.Templates.UI.Controls.TogglePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Microsoft.Templates.UI.Controls"
             xmlns:converters="clr-namespace:Microsoft.Templates.UI.Converters"
             xmlns:services="clr-namespace:Microsoft.Templates.UI.Services"
             xmlns:res="clr-namespace:Microsoft.Templates.UI.Resources"
             Focusable="False"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/UIStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <Storyboard x:Key="FadeIn">
                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="mouseOvershadowGrid" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="dragAndDropButton" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="openButtonContentPresenter" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

            <Storyboard x:Key="FadeOut">
                <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="mouseOvershadowGrid" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="dragAndDropButton" Storyboard.TargetProperty="Opacity"/>
                <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="openButtonContentPresenter" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

            <Style TargetType="Border" x:Key="shadowBorderStyle">
                <Setter Property="Background" Value="{StaticResource UILightGray}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHighContrast, Source={x:Static services:SystemService.Instance}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border" x:Key="dragAndDropShadowBorderStyle">
                <Setter Property="Background" Value="{StaticResource UIYellow}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHighContrast, Source={x:Static services:SystemService.Instance}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border" x:Key="lightShadowBorder">
                <Setter Property="Background" Value="{StaticResource UIWhite}"/>
                <Setter Property="BorderBrush" Value="{StaticResource UIBlack}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHighContrast, Source={x:Static services:SystemService.Instance}}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Grid" x:Key="MainGridStyle">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyleBlueGrid}"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Width="{Binding Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
          Style="{StaticResource MainGridStyle}" x:Name="mainGrid" GotFocus="OnMainGridGotFocus"
          Focusable="{Binding AllowDragAndDrop, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}">
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Control.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Control.GotFocus">
                <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Control.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource FadeOut}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Control.LostFocus">
                <BeginStoryboard Storyboard="{StaticResource FadeOut}"/>
            </EventTrigger>
        </Grid.Triggers>
        <Border x:Name="mouseOvershadowGrid" Style="{StaticResource shadowBorderStyle}" Opacity="0" Focusable="False"/>
        <Border x:Name="dragAndDropShadowBorder" Style="{StaticResource dragAndDropShadowBorderStyle}" Opacity="0" Focusable="False"/>
        <Border
            Style="{StaticResource shadowBorderStyle}" Focusable="False"
            Visibility="{Binding IsOpen, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}" />
        <Grid Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button
                x:Name="dragAndDropButton" Margin="{StaticResource Margin_M_Left}" Style="{StaticResource DragAndDropTogglePaneButtonStyle}"
                Visibility="{Binding AllowDragAndDrop, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                Opacity="0" ToolTip="{x:Static res:StringRes.SummaryDragAndDrop}" AutomationProperties.Name="{x:Static res:StringRes.SummaryDragAndDrop}">
                <Button.Content>
                    <TextBlock Text="&#xE700;" FontSize="12" Style="{StaticResource IconButtonTextStyle}" />
                </Button.Content>
            </Button>
            <ContentPresenter
                Grid.Column="1"
                x:Name="mainViewContentTemplate"
                Margin="0,0,28,0"
                Focusable="False"
                Content="{Binding TogglePanelContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                ContentTemplate="{Binding MainViewTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}" />
        </Grid>
        <Border x:Name="togglePaneShadowGrid" Style="{StaticResource lightShadowBorder}" Opacity="0" Focusable="False" HorizontalAlignment="Right" MaxHeight="30"/>
        <Grid x:Name="menuGrid" HorizontalAlignment="Right" MaxHeight="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter
                x:Name="openButtonContentPresenter"
                Focusable="False"
                Opacity="0"
                Visibility="{Binding IsOpen, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=reverse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                Content="{Binding TogglePanelContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                ContentTemplate="{Binding OpenButtonTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}" />
            <ContentPresenter
                Visibility="{Binding IsOpen, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                Focusable="False"                                    
                Content="{Binding TogglePanelContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                ContentTemplate="{Binding CloseButtonTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}" />
            <ContentPresenter
                Grid.Column="1"
                Focusable="False"
                Content="{Binding TogglePanelContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}"
                ContentTemplate="{Binding SecondaryViewTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:TogglePanel}}}" />
        </Grid>
    </Grid>
</UserControl>
